{"version":3,"sources":["components/Navbar.jsx","reducer/ContactsReducer.jsx","context/ContactsContext.jsx","components/Contact.jsx","components/NoContact.jsx","components/Contacts.jsx","hooks/InputHook.jsx","components/ContactForm.jsx","App.js","index.js"],"names":["Navbar","className","href","ContactsReducer","state","action","type","contact","filter","id","ContactsContext","createContext","ContactsContextProvider","props","useReducer","name","email","phone","contacts","dispatch","Provider","value","children","Contact","useContext","onClick","NoContact","colSpan","Contacts","console","log","length","map","key","InputHook","val","useState","setState","e","target","ContactForm","setName","clearName","setEmail","clearEmail","setPhone","clearPhone","onSubmit","preventDefault","htmlFor","onChange","required","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.036bc9e8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nlet Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          Navbar\r\n        </a>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","\r\nlet ContactsReducer = (state, action) => {\r\n    \r\n    switch (action.type) {\r\n        case 'ADD_CONTACT':\r\n            return [...state, action.contact];\r\n            \r\n        case 'DELETE_CONTACT':\r\n            let filtered = state.filter((contact) => contact.id !== action.id);\r\n            return filtered;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default ContactsReducer\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport ContactsReducer from \"../reducer/ContactsReducer\";\r\n\r\nexport let ContactsContext = createContext();\r\n\r\nlet ContactsContextProvider = (props) => {\r\n\r\n  let [contacts, dispatch] = useReducer(ContactsReducer, [\r\n    { id: 1, name: \"user1\", email: \"user1@gmail.com\", phone: 11111 },\r\n    { id: 2, name: \"user2\", email: \"user2@gmail.com\", phone: 22222 },\r\n    { id: 3, name: \"user3\", email: \"user3@gmail.com\", phone: 33333 },\r\n    { id: 4, name: \"user4\", email: \"user4@gmail.com\", phone: 44444 },\r\n    { id: 5, name: \"user5\", email: \"user5@gmail.com\", phone: 55555 },\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <ContactsContext.Provider value={{contacts, dispatch}}>\r\n        {props.children}\r\n      </ContactsContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport {ContactsContext} from '../context/ContactsContext'\r\n\r\nlet Contact = (props) => {\r\n\r\n    let {dispatch} = useContext(ContactsContext);\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>{props.contact.id}</td>\r\n        <td>{props.contact.name}</td>\r\n        <td>{props.contact.email}</td>\r\n        <td>{props.contact.phone}</td>\r\n        <td>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              dispatch({type: 'DELETE_CONTACT', id: props.contact.id});\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\n\r\nlet NoContact = () => {\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td colSpan=\"5\">No data</td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoContact;\r\n","import React, { useContext } from \"react\";\r\nimport { ContactsContext } from \"../context/ContactsContext\";\r\nimport Contact from \"./Contact\";\r\nimport NoContact from \"./NoContact\";\r\n\r\nlet Contacts = () => {\r\n  let { contacts } = useContext(ContactsContext);\r\n  console.log(contacts);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Phone</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {contacts.length\r\n            ? contacts.map((contact) => {\r\n                return <Contact key={contact.id} contact={contact} />;\r\n              })\r\n            : <NoContact />}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import { useState } from 'react'\r\n\r\nlet InputHook = (val) => {\r\n\r\n    let [state, setState] = useState(val);\r\n\r\n    let InputEvent = (e) => {\r\n        console.log(e.target.value);\r\n        setState(e.target.value);\r\n    }\r\n\r\n    let clear = () => {\r\n        setState(\"\");\r\n    }\r\n\r\n    return [state, InputEvent, clear];\r\n}\r\n\r\nexport default InputHook\r\n","import React, { useContext } from 'react'\r\nimport {ContactsContext} from '../context/ContactsContext'\r\nimport InputHook from '../hooks/InputHook'\r\n\r\nlet ContactForm = () => {\r\n\r\n    let {contacts, dispatch} = useContext(ContactsContext);\r\n\r\n    let [name, setName, clearName] = InputHook(\"\");\r\n    let [email, setEmail, clearEmail] = InputHook(\"\");\r\n    let [phone, setPhone, clearPhone] = InputHook(\"\");\r\n\r\n    let addNewContact = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: 'ADD_CONTACT', contact: {\r\n            id: contacts.length + 1,\r\n            name: name,\r\n            email: email,\r\n            phone: phone\r\n        }})\r\n        clearName();\r\n        clearEmail();\r\n        clearPhone();\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={addNewContact}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"name\" className=\"form-label\">\r\n            Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={setName}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={setEmail}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"phone\" className=\"form-label\">\r\n            Phone\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"phone\"\r\n            name=\"phone\"\r\n            value={phone}\r\n            onChange={setPhone}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContactForm\r\n","import React from 'react'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport Navbar from './components/Navbar'\nimport Contacts from './components/Contacts'\nimport ContactForm from './components/ContactForm'\nimport ContactsContextProvider from './context/ContactsContext'\n\nlet App = () => {\n  return (\n    <>\n      <div className=\"container\">\n        <Navbar />\n          <ContactsContextProvider>\n          <ContactForm />\n          <Contacts />\n          </ContactsContextProvider>\n      </div>\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}